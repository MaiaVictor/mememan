jQuery = require("jquery-browserify");
global.key = module.exports = (function(){
	var KEYCODES = {
		'backspace' : 8,
		'tab' : 9,
		'enter' : 13,
		'shift' : 16,
		'ctrl' : 17,
		'alt' : 18,
		'pause_break' : 19,
		'caps_lock' : 20,
		'escape' : 27,
		'space' : 32,
		'page_up' : 33,
		'page down' : 34,
		'end' : 35,
		'home' : 36,
		'left_arrow' : 37,
		'up_arrow' : 38,
		'right_arrow' : 39,
		'down_arrow' : 40,
		'insert' : 45,
		'delete' : 46,
		'0' : 48,
		'1' : 49,
		'2' : 50,
		'3' : 51,
		'4' : 52,
		'5' : 53,
		'6' : 54,
		'7' : 55,
		'8' : 56,
		'9' : 57,
		'a' : 65,
		'b' : 66,
		'c' : 67,
		'd' : 68,
		'e' : 69,
		'f' : 70,
		'g' : 71,
		'h' : 72,
		'i' : 73,
		'j' : 74,
		'k' : 75,
		'l' : 76,
		'm' : 77,
		'n' : 78,
		'o' : 79,
		'p' : 80,
		'q' : 81,
		'r' : 82,
		's' : 83,
		't' : 84,
		'u' : 85,
		'v' : 86,
		'w' : 87,
		'x' : 88,
		'y' : 89,
		'z' : 90,
		'left_window key' : 91,
		'right_window key' : 92,
		'select_key' : 93,
		'numpad 0' : 96,
		'numpad 1' : 97,
		'numpad 2' : 98,
		'numpad 3' : 99,
		'numpad 4' : 100,
		'numpad 5' : 101,
		'numpad 6' : 102,
		'numpad 7' : 103,
		'numpad 8' : 104,
		'numpad 9' : 105,
		'multiply' : 106,
		'add' : 107,
		'subtract' : 109,
		'decimal point' : 110,
		'divide' : 111,
		'f1' : 112,
		'f2' : 113,
		'f3' : 114,
		'f4' : 115,
		'f5' : 116,
		'f6' : 117,
		'f7' : 118,
		'f8' : 119,
		'f9' : 120,
		'f10' : 121,
		'f11' : 122,
		'f12' : 123,
		'num_lock' : 144,
		'scroll_lock' : 145,
		'semi_colon' : 186,
		'equal_sign' : 187,
		'comma' : 188,
		'dash' : 189,
		'period' : 190,
		'forward_slash' : 191,
		'grave_accent' : 192,
		'open_bracket' : 219,
		'backslash' : 220,
		'closebracket' : 221,
		'single_quote' : 222,
		'mouse1': 'mouse1',
		'mouse2': 'mouse2',
		'mouse3': 'mouse3'
	};
	var KEYSTRINGS = {};
	for (key in KEYCODES)
		KEYSTRINGS[KEYCODES[key]] = key;

	var keydown = {};
	var keypressEvents = {};
	var keyreleaseEvents = {};
	var keydownEvents = {};
	jQuery(document).keydown(function(e){ pressKeyProcedure(e); });
	jQuery(document).keyup(function(e){ releaseKeyProcedure(e); });
	jQuery(document).mousedown(function(e){
		pressKeyProcedure({keyCode:"mouse"+e.which});
	});
	jQuery(document).mouseup(function(e){
		releaseKeyProcedure({keyCode:"mouse"+e.which});
	});
	function releaseKeyProcedure(e){
		if (keydown[e.keyCode])
			if (typeof(keyreleaseEvents[e.keyCode])!="undefined")
				keyreleaseEvents[e.keyCode].forEach(function(releaseEvent){ releaseEvent(e); });
		keydown[e.keyCode]=false;
	}
	function pressKeyProcedure(e){
		if (!keydown[e.keyCode])
			if (typeof(keypressEvents[e.keyCode])!="undefined")
				keypressEvents[e.keyCode].forEach(function(pressEvent){ pressEvent(e); });
		keydown[e.keyCode]=true;
	}

	var mouse_pos = [0,0];
	jQuery(document).mousemove(function(e){
		mouse_pos = [e.pageX,e.pageY];
	});

	function press(keyCode_or_keyString,callback){
		var keyCode = keyCode_or_keyString;
		if (typeof(keyCode_or_keyString)=="string")
			keyCode = KEYCODES[keyCode_or_keyString];
		
		if (typeof(keypressEvents[keyCode])=="undefined")
			keypressEvents[keyCode]=[];
		keypressEvents[keyCode].push(callback);
	};
	function release(keyCode_or_keyString,callback){
		var keyCode = keyCode_or_keyString;
		if (typeof(keyCode_or_keyString)=="string")
			keyCode = KEYCODES[keyCode_or_keyString];
			
		if (typeof(keyreleaseEvents[keyCode])=="undefined")
			keyreleaseEvents[keyCode]=[];
		keyreleaseEvents[keyCode].push(callback);
	};

	return {
		release:release,
		press:press,
		down:function(key){return keydown[KEYCODES[key]]},
		up:function(key){return !keydown[KEYCODES[key]]},
		mouse_pos:function(){return mouse_pos},
		mouse_x:function(){return mouse_pos[0]},
		mouse_y:function(){return mouse_pos[1]}
	};
})();
